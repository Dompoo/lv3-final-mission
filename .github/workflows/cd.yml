name: CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-upload:
    name: gradle 빌드, 아티팩트 업로드
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 불러오기
        uses: actions/checkout@v4

      - name: JDK 21 설정
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
          cache: gradle

      - name: gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: 프로젝트 gradlew 빌드
        run: ./gradlew build

      - name: 아티팩트 저장소에 jar 파일 업로드
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: build/libs/*SNAPSHOT.jar

  download-run:
    name: 아티팩트 다운로드, 서버 실행
    needs: build-upload
    runs-on: self-hosted

    steps:
      - name: 아티팩트 저장소에 저장된 jar 파일 다운로드
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./artifacts

      - name: 기존 80 포트 서버 내리기
        run: |
          PID=$(sudo lsof -t -i :80 || true)

          if [ -n "$PID" ]; then
          	echo "사용중인 포트 80 서버 종료... PID=$PID"
          	sudo kill -15 $PID || true
          	sleep 5

          	CHECK_PID=$(sudo lsof -t -i :80 || true)
          	if [ -z "$CHECK_PID" ]; then
          		echo "기존 서버 종료됨"
          	else
          		echo "기존 서버 종료되지 않아 강제 종료 수행... PID=$CHECK_PID"
          		sudo kill -9 $CHECK_PID || true
          		sleep 5
          	fi
          else
          	echo "포트 80은 사용 중이지 않음"
          fi

      - name: 서버 실행
        env:
          SPRING_PROFILES_ACTIVE: prod
          SERVER_PORT: 80
          DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
          DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
          RANDOMMER_URI: ${{ secrets.RANDOMMER_URI }}
          RANDOMMER_API_KEY: ${{ secrets.RANDOMMER_API_KEY }}
        run: |
          JAR_FILE=$(find ./artifacts -name "*.jar" | head -n 1)
          echo "서버 시작 중... =$JAR_FILE"

          sudo -E -b sh -c "java -jar '$JAR_FILE' > /var/log/app.log 2>&1"

          for i in $(seq 1 10)
          do
            SERVER_STATUS=$(curl -o /dev/null -w "%{http_code}" http://localhost:80/actuator/health || true)

            if [ "$SERVER_STATUS" -eq 200 ]; then
              echo "서버 정상적으로 실행됨 status=$SERVER_STATUS"
              break
            else
              echo "헬스체크에 실패함. 5초 후 다시 시도"
              sleep 5
            fi

            if [ $i -eq 10 ]; then
              echo "서버가 정상적으로 실행되지 않아 종료함"
              exit 1
            fi
          done

          echo "-- 배포 종료 --"
